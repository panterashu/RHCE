MariaDB

cum se instaleaza
yum groupinstall mariadb mariadb-client

main config file
/etc/my.cnf
Instead of adding new configurations to the /etc/my.cnf file, a newly created file named *.cnf can be added to the 
/etc/my.cnf.d/ directory holding the configuration of MariaDB.

systemctl start mariadb
systemctl enable mariadb

Verify that MariaDB is listening on all interfaces:
ss -tulpn | grep mysql (3306 port)

systemctl status mariadb

mysql_secure_installation
Set root password? [Y/n] Y
Remove anonymous users? [Y/n] Y
Disallow root login remotely? [Y/n] Y
Remove test database and access to it? [Y/n] Y
Reload privilege tables now? [Y/n] Y

MariaDB network configuration directives are found in the /etc/my.cnf file, under the [mysqld] section.
- bind-address (The server will listen based on this directive.)
- skip-networking (If set to 1, the server will listen only for local clients. skip-networking=1)
- port (Port to listen on for TCP/IP connections.)

For remote access, the firewall needs to be modified. Fortunately, it is a known service, so it can be simply added via:

firewall-cmd --permanent --add-service=mysql
firewall-cmd --reload

- comenzi utile mysql
ca sa ma logez (daca uiti de p la final e bai)
mysql -u root -p

mysql -u root -h localhost -p

Client to connect to the MariaDB database server. mysql
Option to specify the username for this connection. -u
Username for this connection. root
Option to specify the host name for this connection. If not specified, the default value is localhost. -h
Host name for this connection. localhost
Option to prompt for password -p

list the databases
SHOW DATABASES;

To create a new database
CREATE DATABASE inventory;

After the creation of the new database, the next step is to connect to this database:
USE inventory;

List the tables:
SHOW TABLES;

To list attributes (or the column names) from a table, use:
DESCRIBE servers;

These four basic commands are often referred to by the generic term "CRUD operations." 
CRUD stands for Create (insert), Read (select), Update (update), and Delete (delete).

#insert#

DESCRIBE product; - ca sa vezi ce structura are tabelul product si ce fel de date poti sa introduci

INSERT INTO product (name,price,stock,id_category,id_manufacturer) VALUES ('SDSSDP-128G-G25 2.5',82.04,30,3,1);

Table name.
Attributes (columns) that will be inserted.
Values that will be inserted in the same order defined by attributes, using the proper data types.

#delete#
DELETE FROM product WHERE id = 1;

Table name.
Clause that imposes a condition on the command execution.
The condition for the record to be deleted; often the primary key-value pair is used.

If the where clause is not specified, all records in the table will be erased. This is the database equivalent of running 
rm -rf /.

#update#

UPDATE product SET price=89.90, stock=60 WHERE id = 5;

Table name.
Define the new value from specified attributes.
Clause that imposes a condition on the command execution.
The condition for the record to be updated.

If the where clause is not specified, all records will be updated

#select#

SELECT name,price,stock FROM product ;

Attributes that will be selected.
Table name.

To select all attributes, use the wild card *:
SELECT * FROM product;

Filter results with the where clause:
SELECT * FROM product WHERE price > 100;

Common Operators for where Clauses
Operator Description

=   Equal
<>  Not equal. Note: In some versions of SQL, this operator may be written as !=
>   Greater than
<   Less than
>=  Greater than or equal
<=  Less than or equal
BETWEEN   Between an inclusive range
LIKE  Search for a pattern
IN  To specify multiple possible values for a column

Creating user accounts with MariaDB

By default, MariaDB handles authentication and authorization through the user table in the mysql database.

Account names are specified as 'user_name'@'host_name'. This makes it possible to create
multiple user accounts with the same name, but with different privileges according to the source
host (that is, the host from which the user is connecting).

CREATE USER mobius@localhost IDENTIFIED BY 'redhat';

Username/host name for this account
Password for this account

This user account can only connect from localhost, with the password redhat, and has no privileges. 
Passwords are encrypted in the user table.

If the host name is not provided, it is assumed to be "%". This means that this user can
access from any source host.

Privileges are the permissions that the user may have within MariaDB. The privileges are
organized as:
• Global privileges, such as CREATE USER and SHOW DATABASES, for administration of the
database server itself.
• Database privileges, such as CREATE for creating databases and working with databases on
the server at a high level.
• Table privileges, such as the CRUD commands, for creating tables and manipulating data in the
database.
• Column privileges, for granting table-like command usage, but on a particular column
(generally rare).
• Other, more granular privileges, which are discussed in detail in the MariaDB documentation.

example:
GRANT SELECT ON database.table TO username@hostname
Grant select privilege for a specific table in a specific database to a specific user.
GRANT SELECT ON database.* TO username@hostname
Grant select privilege for all tables in a specific database to a specific user.
GRANT SELECT ON *.* TO username@hostname
Grant select privilege for all tables in all databases to a specific user.
GRANT CREATE, ALTER, DROP ON database.* to username@hostname
Grant privilege to create, alter, and drop tables in a specific database to a specific user.
GRANT ALL PRIVILEGES ON *.* to username@hostname
Grant all available privileges for all databases to a specific user, effectively creating a superuser, similar to root.

The REVOKE statement allows for revoking privileges from accounts.

After granting or revoking a privilege, reload all privileges from the privileges tables in the mysql database.
REVOKE SELECT, UPDATE, DELETE, INSERT on inventory.category frommobius@localhost;
Define the privileges to be revoked.
Define for which table the privilege will be revoked.
Privilege revoked from this user.

In order to revoke privileges, the list of privileges granted to a user will be needed. The simple
command SHOW GRANTS FOR username; will provide the list of privileges for that user:
MariaDB [(none)]> SHOW GRANTS FOR root@localhost;

When a user is no longer required, it can be deleted from the database using DROP USER
username;. The username should use the same 'user'@'host' format used for CREATE USER.
MariaDB [(none)]> FLUSH PRIVILEGES;

Creating and Restoring MariaDB Backups

There are two ways to back up MariaDB:
• Logical
• Physical (raw)

Logical backups export information and records in plain text files, while physical backups consist
of copies of files and directories that store content.

Performing a logical backup
A logical backup can be done with the mysqldump command:

mysqldump -u root -p inventory > /backup/inventory.dump

User name to connect to MariaDB for backup
Prompt for password for this user
Selected database for backup(inventory)
Backup file

Restoring a backup
mysql -u root -p inventory < /backup/mariadb.dump
User to connect with to restore the MariaDB backup (generally root or some other superuser)
Password for this user
Selected database for restore backup
Backup file

To logically back up all databases, use option --all-databases:
[root@serverX ~]# mysqldump -u root -p --all-databases > /backup/mariadb.dump
A dump of this kind will include the mysql database, which includes all user information.

mysqldump requires at least the Select privilege for dumped tables, SHOW VIEW for dumped views, and TRIGGER for dumped triggers.

Several tools are available to perform physical backups, such as ibbackup, cp, mysqlhotcopy, and lvm.
